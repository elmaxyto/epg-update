name: Aggiorna EPG

# Imposta i permessi di scrittura per i contenuti
permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * *'  # Esegue ogni giorno a mezzanotte UTC; personalizza se serve
  workflow_dispatch:  # Permette di eseguire manualmente il workflow

jobs:
  update-epg:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Importante per mantenere i permessi di push

      - name: Scarica il file XML.gz
        run: |
          curl -L -o epg.xml.gz https://epgshare01.online/epgshare01/epg_ripper_IT1.xml.gz || { echo "Download fallito"; exit 1; }

      - name: Decomprimi e rinomina il file
        run: |
          gunzip -f epg.xml.gz
          xml_file=$(ls *.xml | head -n 1)
          if [ "$xml_file" != "epg.xml" ]; then
            mv "$xml_file" epg.xml
          else
            echo "Il file decompresso si chiama gi√† epg.xml"
          fi

      - name: Scarica l'EPG di Pluto TV
        run: |
          curl -L -o pluto_tv_epg.xml https://raw.githubusercontent.com/matthuisman/i.mjh.nz/master/PlutoTV/it.xml || { echo "Download fallito"; exit 1; }

      - name: Installa Python e librerie necessarie
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install xml.etree.ElementTree

      - name: Unisci le EPG con Python
        run: |
          python3 unisci_epg.py

      - name: Verifica e committa le modifiche
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          if git diff --quiet; then
            echo "Nessuna modifica rilevata."
          else
            git add epg.xml
            git commit -m "Aggiornamento automatico della guida EPG"
            git push
          fi
